// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eLearn.Data;

namespace eLearn.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eLearn.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryDescription = "Know more about  science",
                            CategoryImage = "https://image.shutterstock.com/z/stock-vector-science-word-cloud-53764600.jpg",
                            CategoryName = "Science"
                        },
                        new
                        {
                            Id = 2,
                            CategoryDescription = "Know more about computer",
                            CategoryImage = "https://d2gg9evh47fn9z.cloudfront.net/800px_COLOURBOX37705714.jpg",
                            CategoryName = "Computer"
                        });
                });

            modelBuilder.Entity("eLearn.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CourseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CourseDescription = "Unit: Introduction to electrical engineering",
                            CourseImage = "https://image.freepik.com/free-vector/science-word-concept_23-2148543544.jpg",
                            CourseLevel = "Beginner",
                            CourseName = "Electrical Engineering"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CourseDescription = "Unit: Scale of the universe",
                            CourseImage = "https://image.freepik.com/free-vector/science-word-concept_23-2148543544.jpg",
                            CourseLevel = "Beginner",
                            CourseName = "Biology"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CourseDescription = "Unit: Scale of the universe",
                            CourseImage = "https://image.freepik.com/free-vector/science-word-concept_23-2148543544.jpg",
                            CourseLevel = "Intermediate",
                            CourseName = "Cosmology "
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CourseDescription = "Unit: IAtoms, compounds, and ions",
                            CourseImage = "https://image.freepik.com/free-vector/science-word-concept_23-2148543544.jpg",
                            CourseLevel = "Advanced",
                            CourseName = "Chemistry"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CourseDescription = "Unit: Intro to HTML/CSS: Making webpages",
                            CourseImage = "https://cdn5.vectorstock.com/i/1000x1000/54/79/word-cloud-computer-architecture-vector-1695479.jpg",
                            CourseLevel = "Beginner",
                            CourseName = "HTML/CSS: Making webpages"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CourseDescription = "Unit: Intro to SQL: Querying and managing data",
                            CourseImage = "https://cdn5.vectorstock.com/i/1000x1000/54/79/word-cloud-computer-architecture-vector-1695479.jpg",
                            CourseLevel = "Beginner",
                            CourseName = "Querying and managing data"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CourseDescription = "Unit: HTML/JS: Making webpages interactive",
                            CourseImage = "https://cdn5.vectorstock.com/i/1000x1000/54/79/word-cloud-computer-architecture-vector-1695479.jpg",
                            CourseLevel = "Intermediate",
                            CourseName = "HTML/JS webpages interactive"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CourseDescription = "Unit: Advanced JS: Natural Simulations",
                            CourseImage = "https://cdn5.vectorstock.com/i/1000x1000/54/79/word-cloud-computer-architecture-vector-1695479.jpg",
                            CourseLevel = "Advanced",
                            CourseName = "JS: Natural Simulations"
                        });
                });

            modelBuilder.Entity("eLearn.Models.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lecturer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Amal@gmail.com",
                            FirstName = "Bader",
                            LastName = "alqahtani"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Sami@gmail.com",
                            FirstName = "Sami",
                            LastName = "Alshammari"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Ahad@gmail.com",
                            FirstName = "Ahad",
                            LastName = "Alghamdi"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Amal@gmail.com",
                            FirstName = "Rami",
                            LastName = "Alshehri "
                        },
                        new
                        {
                            Id = 5,
                            Email = "Sami@gmail.com",
                            FirstName = "Fahad",
                            LastName = "Alshammari"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Ahad@gmail.com",
                            FirstName = "Nora",
                            LastName = "Alghamdi"
                        });
                });

            modelBuilder.Entity("eLearn.Models.Lecturer_Course", b =>
                {
                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("LecturerId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Lecturer_Course");

                    b.HasData(
                        new
                        {
                            LecturerId = 1,
                            CourseId = 1,
                            Id = 1
                        },
                        new
                        {
                            LecturerId = 2,
                            CourseId = 6,
                            Id = 2
                        },
                        new
                        {
                            LecturerId = 3,
                            CourseId = 2,
                            Id = 3
                        },
                        new
                        {
                            LecturerId = 4,
                            CourseId = 4,
                            Id = 4
                        },
                        new
                        {
                            LecturerId = 4,
                            CourseId = 5,
                            Id = 5
                        },
                        new
                        {
                            LecturerId = 4,
                            CourseId = 3,
                            Id = 6
                        },
                        new
                        {
                            LecturerId = 5,
                            CourseId = 4,
                            Id = 7
                        },
                        new
                        {
                            LecturerId = 5,
                            CourseId = 8,
                            Id = 8
                        },
                        new
                        {
                            LecturerId = 6,
                            CourseId = 7,
                            Id = 9
                        });
                });

            modelBuilder.Entity("eLearn.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Amal@gmail.com",
                            FirstName = "Amal",
                            LastName = "Almutairi"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Lama@gmail.com",
                            FirstName = "Lama",
                            LastName = "Alsalman"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Reema@gmail.com",
                            FirstName = "Reema",
                            LastName = "Altwaim"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Sultan@gmail.com",
                            FirstName = "Sultan",
                            LastName = "Alsalman"
                        });
                });

            modelBuilder.Entity("eLearn.Models.User_Course", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("User_Course");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CourseId = 1,
                            Id = 1
                        },
                        new
                        {
                            UserId = 1,
                            CourseId = 2,
                            Id = 2
                        },
                        new
                        {
                            UserId = 2,
                            CourseId = 4,
                            Id = 3
                        },
                        new
                        {
                            UserId = 2,
                            CourseId = 3,
                            Id = 4
                        },
                        new
                        {
                            UserId = 3,
                            CourseId = 5,
                            Id = 5
                        },
                        new
                        {
                            UserId = 3,
                            CourseId = 7,
                            Id = 6
                        },
                        new
                        {
                            UserId = 4,
                            CourseId = 8,
                            Id = 7
                        },
                        new
                        {
                            UserId = 4,
                            CourseId = 6,
                            Id = 8
                        });
                });

            modelBuilder.Entity("eLearn.Models.User_Lecturer", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "LecturerId");

                    b.HasIndex("LecturerId");

                    b.ToTable("User_Lecturer");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            LecturerId = 1,
                            Id = 1
                        },
                        new
                        {
                            UserId = 1,
                            LecturerId = 3,
                            Id = 2
                        },
                        new
                        {
                            UserId = 2,
                            LecturerId = 5,
                            Id = 3
                        },
                        new
                        {
                            UserId = 2,
                            LecturerId = 4,
                            Id = 4
                        },
                        new
                        {
                            UserId = 3,
                            LecturerId = 4,
                            Id = 5
                        },
                        new
                        {
                            UserId = 3,
                            LecturerId = 6,
                            Id = 6
                        },
                        new
                        {
                            UserId = 4,
                            LecturerId = 5,
                            Id = 7
                        },
                        new
                        {
                            UserId = 4,
                            LecturerId = 2,
                            Id = 8
                        });
                });

            modelBuilder.Entity("eLearn.Models.Course", b =>
                {
                    b.HasOne("eLearn.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eLearn.Models.Lecturer_Course", b =>
                {
                    b.HasOne("eLearn.Models.Course", "Course")
                        .WithMany("Lecturer_Course")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn.Models.Lecturer", "Lecturer")
                        .WithMany("Lecturer_Course")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("eLearn.Models.User_Course", b =>
                {
                    b.HasOne("eLearn.Models.Course", "Course")
                        .WithMany("User_Course")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn.Models.User", "User")
                        .WithMany("User_Course")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearn.Models.User_Lecturer", b =>
                {
                    b.HasOne("eLearn.Models.Lecturer", "Lecturer")
                        .WithMany("User_Lecturer")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn.Models.User", "User")
                        .WithMany("User_Lecturer")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearn.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("eLearn.Models.Course", b =>
                {
                    b.Navigation("Lecturer_Course");

                    b.Navigation("User_Course");
                });

            modelBuilder.Entity("eLearn.Models.Lecturer", b =>
                {
                    b.Navigation("Lecturer_Course");

                    b.Navigation("User_Lecturer");
                });

            modelBuilder.Entity("eLearn.Models.User", b =>
                {
                    b.Navigation("User_Course");

                    b.Navigation("User_Lecturer");
                });
#pragma warning restore 612, 618
        }
    }
}
